AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Secrets Manager for RDS Database Credentials'

Parameters:
  SecretName:
    Type: String
    Default: 'dev/rds/credentials'
    Description: 'Name of the secret in Secrets Manager'
  
  Environment:
    Type: String
    Default: 'dev'
    Description: 'Environment name'
    AllowedValues: ['dev', 'staging', 'prod']
  
  DBUsername:
    Type: String
    Default: 'admin'
    Description: 'Database username'
  
  DBPassword:
    Type: String
    NoEcho: true
    Description: 'Database password'
    MinLength: 8

Resources:
  # RDS Credentials Secret
  RDSCredentialsSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Ref SecretName
      Description: 'RDS database credentials for Lambda function'
      SecretString: !Sub |
        {
          "username": "${DBUsername}",
          "password": "${DBPassword}",
          "engine": "mysql",
          "host": "RDS_ENDPOINT_PLACEHOLDER",
          "port": 3306,
          "dbname": "devdb"
        }
      Tags:
        - Key: Name
          Value: !Ref SecretName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: 'RDS Credentials'

  # Secret Rotation Schedule (optional - for production)
  # Uncomment when you have a rotation Lambda function
  # SecretRotationSchedule:
  #   Type: AWS::SecretsManager::RotationSchedule
  #   Properties:
  #     SecretId: !Ref RDSCredentialsSecret
  #     RotationRules:
  #       AutomaticallyAfterDays: 30
  #     RotationLambdaARN: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:SecretsManagerRotation'

Outputs:
  SecretName:
    Description: 'Name of the secret'
    Value: !Ref RDSCredentialsSecret
    Export:
      Name: !Sub '${AWS::StackName}-SecretName'

  SecretArn:
    Description: 'ARN of the secret'
    Value: !Ref RDSCredentialsSecret
    Export:
      Name: !Sub '${AWS::StackName}-SecretArn'

  SecretString:
    Description: 'Secret string template'
    Value: !Sub |
      {
        "username": "${DBUsername}",
        "password": "${DBPassword}",
        "engine": "mysql",
        "host": "RDS_ENDPOINT_PLACEHOLDER",
        "port": 3306,
        "dbname": "devdb"
      }
    Export:
      Name: !Sub '${AWS::StackName}-SecretString' 